<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.videos.course.server.mapper.AnnoMapper">
  <resultMap id="BaseResultMap" type="com.videos.course.server.domin.Anno">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="releasetime" jdbcType="DATE" property="releasetime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="courseid" jdbcType="CHAR" property="courseid" />
    <result column="teacherid" jdbcType="CHAR" property="teacherid" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.videos.course.server.domin.Anno">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, releasetime, `status`, courseid, teacherid
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.videos.course.server.domin.AnnoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from anno
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.videos.course.server.domin.AnnoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from anno
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from anno
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from anno
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.videos.course.server.domin.AnnoExample">
    delete from anno
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.videos.course.server.domin.Anno">
    insert into anno (id, title, releasetime, 
      `status`, courseid, teacherid, 
      content)
    values (#{id,jdbcType=CHAR}, #{title,jdbcType=VARCHAR}, #{releasetime,jdbcType=DATE}, 
      #{status,jdbcType=VARCHAR}, #{courseid,jdbcType=CHAR}, #{teacherid,jdbcType=CHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.videos.course.server.domin.Anno">
    insert into anno
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="releasetime != null">
        releasetime,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="courseid != null">
        courseid,
      </if>
      <if test="teacherid != null">
        teacherid,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="releasetime != null">
        #{releasetime,jdbcType=DATE},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="courseid != null">
        #{courseid,jdbcType=CHAR},
      </if>
      <if test="teacherid != null">
        #{teacherid,jdbcType=CHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.videos.course.server.domin.AnnoExample" resultType="java.lang.Long">
    select count(*) from anno
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update anno
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.releasetime != null">
        releasetime = #{record.releasetime,jdbcType=DATE},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.courseid != null">
        courseid = #{record.courseid,jdbcType=CHAR},
      </if>
      <if test="record.teacherid != null">
        teacherid = #{record.teacherid,jdbcType=CHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update anno
    set id = #{record.id,jdbcType=CHAR},
      title = #{record.title,jdbcType=VARCHAR},
      releasetime = #{record.releasetime,jdbcType=DATE},
      `status` = #{record.status,jdbcType=VARCHAR},
      courseid = #{record.courseid,jdbcType=CHAR},
      teacherid = #{record.teacherid,jdbcType=CHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update anno
    set id = #{record.id,jdbcType=CHAR},
      title = #{record.title,jdbcType=VARCHAR},
      releasetime = #{record.releasetime,jdbcType=DATE},
      `status` = #{record.status,jdbcType=VARCHAR},
      courseid = #{record.courseid,jdbcType=CHAR},
      teacherid = #{record.teacherid,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.videos.course.server.domin.Anno">
    update anno
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="releasetime != null">
        releasetime = #{releasetime,jdbcType=DATE},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="courseid != null">
        courseid = #{courseid,jdbcType=CHAR},
      </if>
      <if test="teacherid != null">
        teacherid = #{teacherid,jdbcType=CHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.videos.course.server.domin.Anno">
    update anno
    set title = #{title,jdbcType=VARCHAR},
      releasetime = #{releasetime,jdbcType=DATE},
      `status` = #{status,jdbcType=VARCHAR},
      courseid = #{courseid,jdbcType=CHAR},
      teacherid = #{teacherid,jdbcType=CHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.videos.course.server.domin.Anno">
    update anno
    set title = #{title,jdbcType=VARCHAR},
      releasetime = #{releasetime,jdbcType=DATE},
      `status` = #{status,jdbcType=VARCHAR},
      courseid = #{courseid,jdbcType=CHAR},
      teacherid = #{teacherid,jdbcType=CHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>